<?php

namespace backend\models\search;

use backend\models\phongkham\DirectSaleModel;
use backend\modules\clinic\models\Clinic;
use yii\base\Model;
use yii\data\ActiveDataProvider;
use backend\modules\user\models\User;

/**
 * Dep365CustomerOnlineSearch represents the model behind the search form of `backend\modules\customer\models\Dep365CustomerOnline`.
 */
class DirectSaleSearch extends DirectSaleModel
{
    const DA_DEN = 1;

    public $button = '2';
    public $from;
    public $to;
    public $type_search_date = 'date';
    public $type_search_code = 'full_name';

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function rules()
    {
        return [
            [['district', 'co_so', 'permission_user'], 'integer'],
            [['name', 'phone', 'customer_code', 'sex', 'birthday', 'time_lichhen', 'full_name'], 'safe'],
            [['button', 'from', 'to', 'type_search_date', 'type_search_code'], 'string'],
        ];
    }

    public function scenarios()
    {
        return Model::scenarios();
    }


    public function search($params)
    {
        $user = new User();
        $roleUser = $user->getRoleName(\Yii::$app->user->id);

        $query = Clinic::find()->where(['dep365_customer_online.status' => Clinic::STATUS_DH, 'dep365_customer_online.dat_hen' => self::DA_DEN]);

        if ($roleUser == User::USER_DIRECT_SALE) {
            $query->andFilterWhere(['dep365_customer_online.directsale' => \Yii::$app->user->id]);
        }

        if ($roleUser == User::USER_BAC_SI) {
            $query->joinWith(['phongKhamLichDieuTriHasOne', 'customerOnlineComeHasOne']);
            $query->andFilterWhere(['phong_kham_lich_dieu_tri.ekip' => \Yii::$app->user->id]);
            $query->andFilterWhere(['dep365_customer_online_come.accept' => 1]); // khach dong y, khach vang lai dong y
        }

        if ($roleUser == User::USER_DEVELOP) {
            $query->joinWith(['customerOnlineComeHasOne']);
            $query->andFilterWhere(['dep365_customer_online_come.accept' => 1]); // khach dong y, khach vang lai dong y
        }

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'defaultPageSize' => 10
            ],
            'sort' => ['defaultOrder' => ['id' => SORT_DESC]]
        ]);

        $this->load($params);

        if ($this->button == '') {
            $this->from = date('d-m-Y');
            $this->to = date('d-m-Y');
        }

        if ($this->button == '2' && $roleUser == User::USER_DIRECT_SALE) {
            $rowUser = User::findIdentity(\Yii::$app->user->id);
            $this->co_so = $rowUser->permission_coso;
        }

        $query->joinWith(['provinceHasOne']);

        if (!$this->validate()) {
            return $dataProvider;
        }

        $query->andFilterWhere([
            'co_so' => $this->co_so,
//            'phone' => $this->phone,
        ]);

        $query->andFilterWhere(['like', 'full_name', $this->full_name]);
        $query->andFilterWhere(['like', 'customer_code', $this->customer_code]);

        if (isset($this->type_search_date)) {
            if ($this->type_search_date == 'date') {
                if (isset($this->from) && $this->from != null) {
                    $from = strtotime($this->from);
                    $to = strtotime($this->from) + 86399;
                    $query->andFilterWhere(['>', 'customer_come', $from]);
                    $query->andFilterWhere(['<', 'customer_come', $to]);
                }
            } else {
                if (isset($this->from) && isset($this->to) && $this->from != null & $this->to != null) {
                    $from = strtotime($this->from);
                    $to = strtotime($this->to) + 86399;
                    $query->andFilterWhere(['>', 'customer_come', $from]);
                    $query->andFilterWhere(['<', 'customer_come', $to]);
                }
            }
        }

        return $dataProvider;
    }
}
