<?php

namespace backend\modules\testab\models;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\SluggableBehavior;
use yii\db\ActiveRecord;
use common\models\UserProfile;

/**
 * This is the model class for table "ab_campaign".
 *
 * @property int $id
 * @property string $name
 * @property string $slug
 * @property int $ky_thuat
 * @property string $link_test
 * @property string $content
 * @property string $chiphi_thucchay
 * @property string $comment
 * @property string $tin_nhan
 * @property string $tong_tuong_tac
 * @property string $hien_thi
 * @property string $tiep_can
 * @property string $nguoi_xem_1
 * @property string $nguoi_xem_50
 * @property string $tan_suat
 * @property string $gia_tuong_tac
 * @property string $gia_hien_thi
 * @property string $gia_tiep_can
 * @property string $gia_10s
 * @property string $gia_50phantram
 * @property int $status
 * @property int $end_date
 * @property int $created_at
 * @property int $updated_at
 * @property int $created_by
 * @property int $updated_by
 */
class AbCampaign extends \yii\db\ActiveRecord
{
    public $btn_form;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'ab_campaign';
    }

    public function behaviors()
    {
        return [
            'slug' => [
                'class' => SluggableBehavior::class,
                'attribute' => 'name',
                'slugAttribute' => 'slug',
                'immutable' => true, //only create 1
                'ensureUnique' => true, //
            ],
            [
                'class' => BlameableBehavior::class,
                'createdByAttribute' => 'created_by',
                'updatedByAttribute' => 'updated_by',
            ],
            'timestamp' => [
                'class' => 'yii\behaviors\TimestampBehavior',
                'preserveNonEmptyValues' => true,
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at', 'updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['updated_at'],
                ],
            ],
        ];
    }


    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'slug', 'ky_thuat', 'link_test', 'content'], 'required'],
            [['name', 'link_test'], 'unique',
                'targetClass' => '\backend\modules\testab\models\AbCampaign',
                'filter' => function ($query) {
                    $query->andWhere("id<>'{$this->getId()}' AND end_date is not null");
                },
            ],
            [['ky_thuat', 'status', 'end_date', 'created_at', 'updated_at', 'created_by', 'updated_by', 'campaign_id'], 'integer'],
            [['content'], 'string'],
            [['link_test'], 'match', 'pattern' => '/^(https?:\/\/)?(www\.)?fb.me\/[a-zA-Z0-9(\.\?)?]/'],
            [['name', 'slug', 'link_test'], 'string', 'max' => 255],
            [['comment', 'tin_nhan', 'tong_tuong_tac', 'hien_thi', 'tiep_can', 'nguoi_xem_1', 'nguoi_xem_50', 'tan_suat', 'gia_tuong_tac', 'gia_hien_thi', 'gia_tiep_can', 'gia_10s', 'gia_50phantram'], 'safe'],
            [['chiphi_thucchay', 'comment', 'tin_nhan', 'hien_thi', 'tiep_can', 'nguoi_xem_1', 'nguoi_xem_50'], 'integer', 'message' => 'Bạn phải nhập số', 'whenClient' => 'function(attribute, value){
                return isNaN($("#"+ attribute.id).val().replace(/\./g, ""));
            }'],
            [['btn_form'], 'safe']
        ];
    }

    public function scenarios()
    {
        $scenarios = [
//            self::SCENARIO_AJAX_VALIDATION => ['name'],
        ];
        return array_merge(parent::scenarios(), $scenarios); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('backend', 'ID'),
            'name' => Yii::t('backend', 'Tên Campaign/Nhóm Test'),
            'slug' => Yii::t('backend', 'Slug'),
            'ky_thuat' => Yii::t('backend', 'Loại kỹ thuật'),
            'link_test' => Yii::t('backend', 'Link Test'),
            'content' => Yii::t('backend', 'Content'),
            'chiphi_thucchay' => Yii::t('backend', 'Chi phí thực chạy'),
            'comment' => Yii::t('backend', 'Số bình luận'),
            'tin_nhan' => Yii::t('backend', 'Số tin nhắn'),
            'tong_tuong_tac' => Yii::t('backend', 'Tổng tương tác'),
            'hien_thi' => Yii::t('backend', 'Hiển thị'),
            'tiep_can' => Yii::t('backend', 'Tiếp cận'),
            'nguoi_xem_1' => Yii::t('backend', 'Người xem 10s'),
            'nguoi_xem_50' => Yii::t('backend', 'Người xem 50%'),
            'tan_suat' => Yii::t('backend', 'Tần suất'),
            'gia_tuong_tac' => Yii::t('backend', 'Giá tương tác'),
            'gia_hien_thi' => Yii::t('backend', 'Giá hiển thị'),
            'gia_tiep_can' => Yii::t('backend', 'Giá tiếp cận'),
            'gia_10s' => Yii::t('backend', 'Giá 10s'),
            'gia_50phantram' => Yii::t('backend', 'Giá 50%'),
            'status' => Yii::t('backend', 'Status'),
            'end_date' => Yii::t('backend', 'Ngày kết thúc'),
            'created_at' => Yii::t('backend', 'Created At'),
            'updated_at' => Yii::t('backend', 'Updated At'),
            'created_by' => Yii::t('backend', 'Created By'),
            'updated_by' => Yii::t('backend', 'Updated By'),
            'campaign_id' => 'Tên chiến dịch',
        ];
    }

    public function getId()
    {
        return $this->getPrimaryKey();
    }

    public function getKyThuatHasOne()
    {
        return $this->hasOne(AbAddKythuat::class, ['id' => 'ky_thuat']);
    }

    public function getUserCreatedBy($id)
    {
        if ($id == null) {
            return null;
        }
        $user = UserProfile::find()->where(['user_id' => $id])->one();
        return $user;
    }

    public function getUserUpdatedBy($id)
    {
        if ($id == null) {
            return null;
        }
        $user = UserProfile::find()->where(['user_id' => $id])->one();
        return $user;
    }
}
