<?php

namespace backend\modules\clinic\models;

use backend\models\doanhthu\DonHangModel;
use backend\modules\customer\models\Dep365CustomerOnline;
use common\models\UserProfile;
use Yii;
use yii\behaviors\AttributeBehavior;
use yii\behaviors\BlameableBehavior;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "phong_kham_don_hang_w_order".
 *
 * @property int $id
 * @property int $phong_kham_don_hang_id
 * @property int $dich_vu
 * @property int $san_pham
 * @property int $so_luong
 * @property string $thanh_tien
 * @property int $status
 * @property int $created_at
 * @property int $updated_at
 * @property int $created_by
 * @property int $updated_by
 */
class PhongKhamDonHangWOrder extends \yii\db\ActiveRecord
{
    public $total_qty;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'phong_kham_don_hang_w_order';
    }

    public function getMoneyCustomer($idDonHang)
    {
        $cache = Yii::$app->cache;
        $key = 'get-money-customer-pkdh-' . $idDonHang;

        $data = $cache->get($key);

        if ($data == false) {
            $data = self::find()->select(['thanh_tien'])->where(['phong_kham_don_hang_id' => $idDonHang])->sum('replace(thanh_tien, \'.\', \'\')');
            $cache->set($key, $data, 7 * 24 * 3600);
        }
        return $data;
    }

    public function afterDelete()
    {
        $id = $this->primaryKey;
        $cache = Yii::$app->cache;
        $key = 'get-money-customer-pkdh-' . $id;
        $cache->delete($key);
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $id = $this->primaryKey;
        $cache = Yii::$app->cache;
        $key = 'get-money-customer-pkdh-' . $id;
        $cache->delete($key);
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::class,
                'createdByAttribute' => 'created_by',
                'updatedByAttribute' => 'updated_by',
            ],
            'timestamp' => [
                'class' => 'yii\behaviors\TimestampBehavior',
                //'preserveNonEmptyValues' => true,
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at', 'updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['updated_at'],
                ],
                'value' => time(),
            ],
            [
                'class' => AttributeBehavior::class,
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => 'ngay_tao',
                ],
                'value' => function () {
                    return strtotime(date('d-m-Y'));
                },
            ],
        ];
    }

    const CHIET_KHAU_TIEN = 1;
    const CHIET_KHAU_PHAN_TRAM = 2;

    public $don_gia;

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['phong_kham_don_hang_id', 'dich_vu', 'so_luong'], 'required'],
            [['san_pham'], 'required', 'when' => function ($model) {
                return $model->dich_vu != null;
            }, 'whenClient' => 'function(attribute, value){
                return $("#phongkhamdonhang-customer_order-0-dich_vu").val() != 0;
            }'],
            [['customer_id', 'phong_kham_don_hang_id', 'status', 'chiet_khau_theo_order'], 'integer'],
            [['ly_do_chiet_khau'], 'string'],
            [['thanh_tien', 'chiet_khau_order'], 'string', 'max' => 255],
            [['dich_vu', 'san_pham', 'so_luong'], 'string', 'max' => 255],
            [['don_gia', 'total_qty'], 'safe'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('backend', 'ID'),
            'phong_kham_don_hang_id' => Yii::t('backend', 'Phòng Khám Đơn Hàng ID'),
            'dich_vu' => Yii::t('backend', 'Dịch Vụ'),
            'san_pham' => Yii::t('backend', 'Sản Phẩm'),
            'so_luong' => Yii::t('backend', 'Số Lượng'),
            'thanh_tien' => Yii::t('backend', 'Thành Tiền'),
            'status' => Yii::t('backend', 'Status'),
            'created_at' => Yii::t('backend', 'Created At'),
            'updated_at' => Yii::t('backend', 'Updated At'),
            'created_by' => Yii::t('backend', 'Created By'),
            'updated_by' => Yii::t('backend', 'Updated By'),
        ];
    }

    public function getDichVuHasOne()
    {
        return $this->hasOne(PhongKhamDichVu::class, ['id' => 'dich_vu']);
    }

    public function getSanPhamHasOne()
    {
        return $this->hasOne(PhongKhamSanPham::class, ['id' => 'san_pham']);
    }

    public function getUserCreatedBy($id)
    {
        if ($id == null) {
            return false;
        }
        $user = UserProfile::find()->where(['user_id' => $id])->one();
        return $user;
    }

    public function getUserUpdatedBy($id)
    {
        if ($id == null) {
            return false;
        }
        $user = UserProfile::find()->where(['user_id' => $id])->one();
        return $user;
    }

    public function getDonHangModelHasOne()
    {
        return $this->hasOne(DonHangModel::class, ['id' => 'phong_kham_don_hang_id']);
    }

    public function getCustomerOnlineHasOne()
    {
        return $this->hasOne(Dep365CustomerOnline::class, ['id' => 'customer_id']);
    }

    public function getPhongKhamLichDieuTriHasOne()
    {
        return $this->hasOne(PhongKhamLichDieuTri::class, ['customer_id' => 'customer_id']);
    }
}
