<?php

namespace backend\modules\clinic\models\search;

use backend\models\CustomerModel;
use backend\modules\clinic\models\Clinic;
use backend\modules\clinic\models\CustomerDanhGia;
use backend\modules\user\models\User;
use Yii;
use yii\base\Model;
use yii\data\ActiveDataProvider;

/**
 * Dep365CustomerOnlineSearch represents the model behind the search form of `backend\modules\customer\models\Dep365CustomerOnline`.
 */
class LichHenSearch extends Clinic
{
    public $from;
    public $to;

    public $button = '';

    public $type_search_date = 'date';


    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function rules()
    {
        return [
            [['id', 'status', 'nguon_online', 'district', 'co_so', 'face_fanpage', 'permission_user', 'province', 'status_fail', 'dat_hen'], 'integer'],
            [['name', 'slug', 'phone', 'sex', 'note', 'birthday', 'tt_kh', 'created_at', 'time_lichhen', 'ngaythang', 'date_from', 'date_to', 'full_name', 'forename', 'name'], 'safe'],
            [['from', 'to', 'type_search_date'], 'string'],
            [['button'], 'integer'],

        ];
    }

    public function scenarios()
    {
        return Model::scenarios();
    }


    public function search($params)
    {
        $user = new User();
        $roleUser = $user->getRoleName(Yii::$app->user->id);

        $query = Clinic::find()->select([
            CustomerModel::tableName().'.id',
            CustomerModel::tableName().'.avatar',
            CustomerModel::tableName().'.name',
            CustomerModel::tableName().'.full_name',
            CustomerModel::tableName().'.forename',
            CustomerModel::tableName().'.customer_code',
            CustomerModel::tableName().'.phone',
            CustomerModel::tableName().'.dat_hen',
            CustomerModel::tableName().'.time_lichhen',
            CustomerModel::tableName().'.customer_come',
            CustomerModel::tableName().'.directsale',
            CustomerModel::tableName().'.province',
            CustomerModel::tableName().'.customer_come_time_to',
            CustomerModel::tableName().'.ly_do_khong_lam',
            CustomerModel::tableName().'.co_so',
            CustomerModel::tableName().'.id_dich_vu',
            /*CustomerDanhGia::tableName().'.danh_gia',*/
            CustomerModel::tableName().'.note',
            CustomerModel::tableName().'.permission_user',
            CustomerModel::tableName().'.note_direct',
        ])->where([CustomerModel::tableName() . '.status' => Clinic::STATUS_DH]);
        $query->joinWith(['provinceHasOne'/*, 'danhGiaHasOne'*/]);
        $query->groupBy(CustomerModel::tableName() . '.id');

        $this->load($params);

        if ($roleUser == \common\models\User::USER_LE_TAN || $roleUser == \common\models\User::USER_MANAGER_LE_TAN) {
            if ($this->button == '' || $this->button == 2) {
                $query->andWhere([CustomerModel::tableName() . '.co_so' => Yii::$app->user->identity->permission_coso]);
                $this->co_so = Yii::$app->user->identity->permission_coso;
            } elseif ($this->co_so != null) {
                $query->andWhere([CustomerModel::tableName() . '.co_so' => $this->co_so]);
            }
        } else {
            $query->andFilterWhere([
                CustomerModel::tableName() . '.co_so' => $this->co_so,
            ]);
        }

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'sort' => ['defaultOrder' => ['time_lichhen' => SORT_ASC]]
        ]);

        if ($this->button == '') {
            $this->from = date('d-m-Y');
            $this->to = date('d-m-Y');
        }

//        if (!$this->validate()) {
//            return $dataProvider;
//        }

        if (isset($this->type_search_date)) {
            if ($this->type_search_date == 'date') {
                if (isset($this->from) && $this->from != null) {
                    $from = strtotime($this->from);
                    $to = strtotime($this->from) + 86399;
                    $query->andFilterWhere(['>', 'time_lichhen', $from]);
                    $query->andFilterWhere(['<', 'time_lichhen', $to]);
                }
            } else {
                if (isset($this->from) && isset($this->to) && $this->from != null && $this->to != null) {
                    $from = strtotime($this->from);
                    $to = strtotime($this->to) + 86399;
                    $query->andFilterWhere(['>', 'time_lichhen', $from]);
                    $query->andFilterWhere(['<', 'time_lichhen', $to]);
                }
            }
        }

        if (isset($this->full_name) && $this->full_name != null) {
            $this->full_name = trim($this->full_name);
            $this->full_name = preg_replace('/\s+/', ' ', $this->full_name);
            $query->andFilterWhere(['or',
                ['like', CustomerModel::tableName() . '.full_name', $this->full_name],
                ['like', CustomerModel::tableName() . '.forename', $this->full_name],
                ['like', CustomerModel::tableName() . '.name', $this->full_name],
                ['like', CustomerModel::tableName() . '.phone', $this->full_name],
                ['like', CustomerModel::tableName() . '.customer_code', $this->full_name],
            ]);
        }

//        echo $query->createCommand()->getRawSql(); die;

        return $dataProvider;
    }
}
