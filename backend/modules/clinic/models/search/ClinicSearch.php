<?php

namespace backend\modules\clinic\models\search;

use backend\models\CustomerModel;
use backend\modules\clinic\models\Clinic;
use backend\modules\clinic\models\PhongKhamDonHang;
use backend\modules\clinic\models\PhongKhamLichDieuTri;
use backend\modules\customer\models\Dep365CustomerOnline;
use backend\modules\user\models\User;
use Yii;
use yii\base\Model;
use yii\data\ActiveDataProvider;

/**
 * Dep365CustomerOnlineSearch represents the model behind the search form of `backend\modules\customer\models\Dep365CustomerOnline`.
 */
class ClinicSearch extends Clinic
{
    public $from;
    public $to;

    public $button = '';

    public $type_search_date = 'date';

    public $keyword;
    public $creation_time_from;
    public $creation_time_to;
    public $appointment_time_from;
    public $appointment_time_to;
    public $type_search_create = 'date';
    public $type_search_appointment = 'date';
    public $thao_tac;

    public $appointment_time_from_lich_dieu_tri;
    public $appointment_time_to_lich_dieu_tri;

    /**
     * last_dieu_tri = 1 : Hoan thanh dich vu
     * last_dieu_tri = 0 : Chua hoan thanh dich vu
     */
    public $last_dieu_tri;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function rules()
    {
        return [
            [['id', 'status', 'nguon_online', 'district', 'co_so', 'face_fanpage', 'permission_user', 'province', 'status_fail', 'dat_hen'], 'integer'],
            [['name', 'slug', 'phone', 'sex', 'note', 'birthday', 'tt_kh', 'created_at', 'time_lichhen', 'ngaythang', 'date_from', 'date_to', 'full_name', 'forename', 'name', 'id_dich_vu'], 'safe'],
            [['from', 'to', 'type_search_date'], 'string'],
            [['button', 'keyword', 'appointment_time_from', 'appointment_time_to', 'creation_time_from', 'creation_time_to', 'type_search_create', 'type_search_appointment', 'customer_come_time_to', 'directsale', 'thao_tac', 'last_dieu_tri', 'appointment_time_from_lich_dieu_tri', 'appointment_time_to_lich_dieu_tri'], 'safe'],
        ];
    }

    public function scenarios()
    {
        return Model::scenarios();
    }


    public function search($params)
    {
        $user = new User();
        $roleUser = $user->getRoleName(Yii::$app->user->id);

        $query = Clinic::find()->where([CustomerModel::tableName() . '.status' => Clinic::STATUS_DH, CustomerModel::tableName() . '.dat_hen' => Clinic::DA_DEN]);
        $query->joinWith(['provinceHasOne']);
        $query->groupBy(CustomerModel::tableName() . '.id');

        $this->co_so = Yii::$app->user->identity->permission_coso;

        $this->load($params);

        if ($this->button == '') {
            $this->appointment_time_from = date('d-m-Y');
            $this->appointment_time_to = date('d-m-Y');
        }

        if ($this->button == 2) {
            $this->keyword = '';
            $this->creation_time_from = '';
            $this->creation_time_to = '';
            $this->appointment_time_from = '';
            $this->appointment_time_to = '';
            //            $this->co_so = Yii::$app->user->identity->permission_coso;
            $this->permission_user = '';
            $this->customer_come_time_to = '';
            $this->directsale = '';
        }


        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'sort' => ['defaultOrder' => ['time_lichhen' => SORT_DESC]]
        ]);

        if ($this->button == '') {
            $this->from = date('d-m-Y');
            $this->to = date('d-m-Y');
        }

        //        if (!$this->validate()) {
        //            return $dataProvider;
        //        }

        /* Search ngày tạo */
        if (isset($this->type_search_create)) {
            if ($this->type_search_create == 'date') {
                if (isset($this->creation_time_from) && $this->creation_time_from != null) {
                    $from = strtotime($this->creation_time_from);
                    $to = strtotime($this->creation_time_from) + 86399;
                    $query->andFilterWhere(['>', CustomerModel::tableName() . '.created_at', $from]);
                    $query->andFilterWhere(['<', CustomerModel::tableName() . '.created_at', $to]);
                }
            } else {
                if (
                    isset($this->creation_time_from) && isset($this->creation_time_to) &&
                    $this->creation_time_from != null && $this->creation_time_to != null
                ) {
                    $from = strtotime($this->creation_time_from);
                    $to = strtotime($this->creation_time_to) + 86399;
                    $query->andFilterWhere(['>', CustomerModel::tableName() . '.created_at', $from]);
                    $query->andFilterWhere(['<', CustomerModel::tableName() . '.created_at', $to]);
                }
            }
        }

        /* Search lịch hẹn */
        if (isset($this->type_search_appointment)) {
            if ($this->type_search_appointment == 'date') {
                if (isset($this->appointment_time_from) && $this->appointment_time_from != null) {
                    $from = strtotime($this->appointment_time_from);
                    $to = strtotime($this->appointment_time_from) + 86399;
                    $query->andFilterWhere(['>', CustomerModel::tableName() . '.time_lichhen', $from]);
                    $query->andFilterWhere(['<', CustomerModel::tableName() . '.time_lichhen', $to]);
                }
            } else {
                if (
                    isset($this->appointment_time_from) && isset($this->appointment_time_to) &&
                    $this->appointment_time_from != null && $this->appointment_time_to != null
                ) {
                    $from = strtotime($this->appointment_time_from);
                    $to = strtotime($this->appointment_time_to) + 86399;
                    $query->andFilterWhere(['>', CustomerModel::tableName() . '.time_lichhen', $from]);
                    $query->andFilterWhere(['<', CustomerModel::tableName() . '.time_lichhen', $to]);
                }
            }
        }

        /* Search name, phone, code */
        if (isset($this->keyword) && $this->keyword != null) {
            $this->keyword = trim($this->keyword);
            $this->keyword = preg_replace('/\s+/', ' ', $this->keyword);
            $query->andFilterWhere([
                'or',
                ['like', CustomerModel::tableName() . '.full_name', $this->keyword],
                ['like', CustomerModel::tableName() . '.forename', $this->keyword],
                ['like', CustomerModel::tableName() . '.name', $this->keyword],
                ['like', CustomerModel::tableName() . '.phone', $this->keyword],
                ['like', CustomerModel::tableName() . '.customer_code', $this->keyword],
            ]);
        }

        if (isset($this->co_so) && $this->co_so != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.co_so' => $this->co_so]);
        }

        if (isset($this->permission_user) && $this->permission_user != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.permission_user' => $this->permission_user]);
        }

        if (isset($this->dat_hen) && $this->dat_hen != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.dat_hen' => $this->dat_hen]);
        }

        if (isset($this->customer_come_time_to) && $this->customer_come_time_to != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.customer_come_time_to' => $this->customer_come_time_to]);
        }

        if (isset($this->directsale) && $this->directsale != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.directsale' => $this->directsale]);
        }

        if (isset($this->nguon_online) && $this->nguon_online != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.nguon_online' => $this->nguon_online]);
        }

        if (isset($this->id_dich_vu) && $this->id_dich_vu != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.id_dich_vu' => $this->id_dich_vu]);
        }

        return $dataProvider;
    }

    /**
     * Search khach hang dong y
     * PHAM THANH NGHIA
     */
    public function searchCompleteCustomerService($params)
    {
        $query = Clinic::find();
        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'sort' => ['defaultOrder' => ['time_lichhen' => SORT_DESC]]
        ]);
        $this->load($params);

        // NGHIA NOT good performance // trang thai hoan thanh dich vu
        $ArrayDonHangLichDieuTriID = [];
        $mLichDieuTri = PhongKhamLichDieuTri::find();
        $mLichDieuTri->select('DISTINCT(' . PhongKhamLichDieuTri::tableName() . '.customer_id)');
        // Yii::warning($this->last_dieu_tri);

        if ($this->last_dieu_tri == PhongKhamDonHang::HOAN_THANH_KHAM) {
            $mLichDieuTri->andFilterWhere([PhongKhamLichDieuTri::tableName() . '.last_dieu_tri' => PhongKhamDonHang::HOAN_THANH_KHAM]);
        }

        if ($this->last_dieu_tri == PhongKhamDonHang::CHUA_HOAN_THANH_KHAM) {
            $mLichDieuTri->andFilterWhere(['in', PhongKhamLichDieuTri::tableName() . '.last_dieu_tri', PhongKhamDonHang::CHUA_HOAN_THANH_KHAM]);
            $mLichDieuTri->andFilterWhere(['not in', PhongKhamLichDieuTri::tableName() . '.last_dieu_tri', PhongKhamDonHang::HOAN_THANH_KHAM]);
        }

        if (
            isset($this->appointment_time_from) && isset($this->appointment_time_to) &&
            $this->appointment_time_from != null && $this->appointment_time_to != null
        ) {
            $from = strtotime($this->appointment_time_from);
            $to = strtotime($this->appointment_time_to) + 86399;
            $mLichDieuTri->andFilterWhere(['>', PhongKhamLichDieuTri::tableName() . '.time_dieu_tri', $from]);
            $mLichDieuTri->andFilterWhere(['<', PhongKhamLichDieuTri::tableName() . '.time_dieu_tri', $to]);
        }

        if (isset($this->thao_tac) &&  $this->thao_tac != null) {
            $mLichDieuTri->andFilterWhere(['like', PhongKhamLichDieuTri::tableName() . '.thao_tac',  $this->thao_tac]);
            // $mLichDieuTri->andFilterWhere("JSON_SEARCH(" . PhongKhamLichDieuTri::tableName() . ".thao_tac, 'all', " . $this->thao_tac . ") is not null");
        }

        $list = $mLichDieuTri->all();
        foreach ($list as $item) {
            $ArrayDonHangLichDieuTriID[] = $item->customer_id;
        }
        /**
         * Khach dong y
         */
        $query->andFilterWhere(['in', Clinic::tableName() . '.id', $ArrayDonHangLichDieuTriID])
            ->andFilterWhere(["dat_hen" => Dep365CustomerOnline::DAT_HEN_DEN])
            ->andFilterWhere([Clinic::tableName() . '.status' => Dep365CustomerOnline::STATUS_DH]);

        /* Search name, phone, code */
        if (isset($this->keyword) && $this->keyword != null) {
            $this->keyword = trim($this->keyword);
            $this->keyword = preg_replace('/\s+/', ' ', $this->keyword);
            $query->andFilterWhere([
                'or',
                ['like', Clinic::tableName() . '.full_name', $this->keyword],
                ['like', Clinic::tableName() . '.forename', $this->keyword],
                ['like', Clinic::tableName() . '.name', $this->keyword],
                ['like', Clinic::tableName() . '.phone', $this->keyword],
                ['like', Clinic::tableName() . '.customer_code', $this->keyword],
            ]);
        }

        return $dataProvider;
    }

    /**
     * Khach hang cho affiliate
     * affiliate/customer
     */

    public function searchCustomerAffiliate($params)
    {
        $user = new User();
        $roleUser = $user->getRoleName(Yii::$app->user->id);

        $query = Clinic::find()->where([CustomerModel::tableName() . '.status' => Clinic::STATUS_DH, CustomerModel::tableName() . '.dat_hen' => Clinic::DA_DEN]);
        $query->joinWith(['provinceHasOne']);
        $query->groupBy(CustomerModel::tableName() . '.id');

        // $this->co_so = Yii::$app->user->identity->permission_coso;

        $this->load($params);

        // if ($this->button == '') {
        //     $this->appointment_time_from = date('d-m-Y');
        //     $this->appointment_time_to = date('d-m-Y');
        // }

        if ($this->button == 2) {
            $this->keyword = '';
            $this->creation_time_from = '';
            $this->creation_time_to = '';
            $this->appointment_time_from = '';
            $this->appointment_time_to = '';
            //            $this->co_so = Yii::$app->user->identity->permission_coso;
            $this->permission_user = '';
            $this->customer_come_time_to = '';
            $this->directsale = '';
        }


        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'sort' => ['defaultOrder' => ['time_lichhen' => SORT_DESC]]
        ]);

        if ($this->button == '') {
            $this->from = date('d-m-Y');
            $this->to = date('d-m-Y');
        }

        //        if (!$this->validate()) {
        //            return $dataProvider;
        //        }

        /* Search ngày tạo */
        if (isset($this->type_search_create)) {
            if ($this->type_search_create == 'date') {
                if (isset($this->creation_time_from) && $this->creation_time_from != null) {
                    $from = strtotime($this->creation_time_from);
                    $to = strtotime($this->creation_time_from) + 86399;
                    $query->andFilterWhere(['>', CustomerModel::tableName() . '.created_at', $from]);
                    $query->andFilterWhere(['<', CustomerModel::tableName() . '.created_at', $to]);
                }
            } else {
                if (
                    isset($this->creation_time_from) && isset($this->creation_time_to) &&
                    $this->creation_time_from != null && $this->creation_time_to != null
                ) {
                    $from = strtotime($this->creation_time_from);
                    $to = strtotime($this->creation_time_to) + 86399;
                    $query->andFilterWhere(['>', CustomerModel::tableName() . '.created_at', $from]);
                    $query->andFilterWhere(['<', CustomerModel::tableName() . '.created_at', $to]);
                }
            }
        }

        /* Search lịch hẹn */
        if (isset($this->type_search_appointment)) {
            if ($this->type_search_appointment == 'date') {
                if (isset($this->appointment_time_from) && $this->appointment_time_from != null) {
                    $from = strtotime($this->appointment_time_from);
                    $to = strtotime($this->appointment_time_from) + 86399;
                    $query->andFilterWhere(['>', CustomerModel::tableName() . '.time_lichhen', $from]);
                    $query->andFilterWhere(['<', CustomerModel::tableName() . '.time_lichhen', $to]);
                }
            } else {
                if (
                    isset($this->appointment_time_from) && isset($this->appointment_time_to) &&
                    $this->appointment_time_from != null && $this->appointment_time_to != null
                ) {
                    $from = strtotime($this->appointment_time_from);
                    $to = strtotime($this->appointment_time_to) + 86399;
                    $query->andFilterWhere(['>', CustomerModel::tableName() . '.time_lichhen', $from]);
                    $query->andFilterWhere(['<', CustomerModel::tableName() . '.time_lichhen', $to]);
                }
            }
        }

        /* Search name, phone, code */
        if (isset($this->keyword) && $this->keyword != null) {
            $this->keyword = trim($this->keyword);
            $this->keyword = preg_replace('/\s+/', ' ', $this->keyword);
            $query->andFilterWhere([
                'or',
                ['like', CustomerModel::tableName() . '.full_name', $this->keyword],
                ['like', CustomerModel::tableName() . '.forename', $this->keyword],
                ['like', CustomerModel::tableName() . '.name', $this->keyword],
                ['like', CustomerModel::tableName() . '.phone', $this->keyword],
                ['like', CustomerModel::tableName() . '.customer_code', $this->keyword],
            ]);
        }

        if (isset($this->co_so) && $this->co_so != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.co_so' => $this->co_so]);
        }

        if (isset($this->permission_user) && $this->permission_user != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.permission_user' => $this->permission_user]);
        }

        if (isset($this->dat_hen) && $this->dat_hen != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.dat_hen' => $this->dat_hen]);
        }

        if (isset($this->customer_come_time_to) && $this->customer_come_time_to != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.customer_come_time_to' => $this->customer_come_time_to]);
        }

        if (isset($this->directsale) && $this->directsale != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.directsale' => $this->directsale]);
        }

        if (isset($this->nguon_online) && $this->nguon_online != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.nguon_online' => $this->nguon_online]);
        }

        if (isset($this->id_dich_vu) && $this->id_dich_vu != null) {
            $query->andFilterWhere([CustomerModel::tableName() . '.id_dich_vu' => $this->id_dich_vu]);
        }


        /**
         * Search time cua lich dieu tri
         * appointment_time_from_lich_dieu_tri
         * appointment_time_to_lich_dieu_tri
         * last_dieu_tri
         */
        $ArrayDonHangLichDieuTriID = [];
        $mLichDieuTri = PhongKhamLichDieuTri::find();
        $mLichDieuTri->select('DISTINCT(' . PhongKhamLichDieuTri::tableName() . '.customer_id)');
        // Yii::warning($this->last_dieu_tri);

        if ($this->last_dieu_tri == PhongKhamDonHang::HOAN_THANH_KHAM) {
            $mLichDieuTri->andFilterWhere([PhongKhamLichDieuTri::tableName() . '.last_dieu_tri' => PhongKhamDonHang::HOAN_THANH_KHAM]);
        }

        if ($this->last_dieu_tri == PhongKhamDonHang::CHUA_HOAN_THANH_KHAM) {
            $mLichDieuTri->andFilterWhere(['in', PhongKhamLichDieuTri::tableName() . '.last_dieu_tri', PhongKhamDonHang::CHUA_HOAN_THANH_KHAM]);
            $mLichDieuTri->andFilterWhere(['not in', PhongKhamLichDieuTri::tableName() . '.last_dieu_tri', PhongKhamDonHang::HOAN_THANH_KHAM]);
        }

        if (
            isset($this->appointment_time_from_lich_dieu_tri) && isset($this->appointment_time_to_lich_dieu_tri) &&
            $this->appointment_time_from_lich_dieu_tri != null && $this->appointment_time_to_lich_dieu_tri != null
        ) {
            $from = strtotime($this->appointment_time_from_lich_dieu_tri);
            $to = strtotime($this->appointment_time_to_lich_dieu_tri) + 86399;
            $mLichDieuTri->andFilterWhere(['>', PhongKhamLichDieuTri::tableName() . '.time_dieu_tri', $from]);
            $mLichDieuTri->andFilterWhere(['<', PhongKhamLichDieuTri::tableName() . '.time_dieu_tri', $to]);
        }

        if (isset($this->thao_tac) &&  $this->thao_tac != null) {
            $mLichDieuTri->andFilterWhere(['like', PhongKhamLichDieuTri::tableName() . '.thao_tac',  $this->thao_tac]);
            // $mLichDieuTri->andFilterWhere("JSON_SEARCH(" . PhongKhamLichDieuTri::tableName() . ".thao_tac, 'all', " . $this->thao_tac . ") is not null");
        }

        $list = $mLichDieuTri->all();
        foreach ($list as $item) {
            $ArrayDonHangLichDieuTriID[] = $item->customer_id;
        }
        /**
         * Khach dong y
         */
        $query->andFilterWhere(['in', Clinic::tableName() . '.id', $ArrayDonHangLichDieuTriID]);

        return $dataProvider;
    }
}
