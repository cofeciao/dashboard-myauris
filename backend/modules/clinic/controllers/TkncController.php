<?php

namespace backend\modules\clinic\controllers;

use backend\modules\clinic\components\HinhCustomer;
use backend\modules\clinic\models\Clinic;
use backend\modules\clinic\models\CustomerImages;
use backend\modules\clinic\models\form\FormChupHinh;
use backend\modules\clinic\models\form\FormHinhTknc;
use backend\modules\clinic\models\PhongKhamChupHinh;
use common\helpers\MyHelper;
use Yii;
use backend\modules\clinic\models\PhongKhamHinhTknc;
use backend\components\GapiComponent;
use yii\db\Exception;
use yii\db\Transaction;
use yii\helpers\Url;
use yii\web\Response;
use yii\web\UploadedFile;

/**
 * TkncController implements the CRUD actions for PhongKhamHinhTknc model.
 */
class TkncController extends HinhCustomer
{
    const FOLDER = 'thiet-ke-nu-cuoi';

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        ini_set('memory_limit', '-1');
        set_time_limit(600);
    }

    public function actionUpload($id)
    {
        $customer = Clinic::find()->where(['id' => $id])->one();
        if ($customer === null) {
            return $this->redirect(Url::toRoute(['site/index']));
        }
        if ($customer->full_name == null) {
            Yii::$app->session->setFlash('alert', [
                'body' => 'Vui lòng cập nhật Họ và Tên đầy đủ của khách hàng!',
                'class' => 'alert-warning'
            ]);
            return $this->redirect(Url::toRoute('index'));
        }
        $service = GapiComponent::getService();

        $time = strtotime(date('d-m-Y'));
        $checkGDriveFolder = PhongKhamHinhTknc::find()->where(['between', 'created_at', $time, $time + 86399])->andWhere(['customer_id' => $id])->one();
        if ($checkGDriveFolder == null) {
            $gDriveFolder = GapiComponent::initSubFolderForCustomerByDate($service, MyHelper::createAlias($customer->full_name) . '-' . $id, date('d-m-Y'), self::FOLDER);
            $gDrive = new PhongKhamHinhTknc();
            $gDrive->customer_id = $id;
            $gDrive->folder_id = $gDriveFolder;
            $gDrive->save();
        } else {
            $getFolder = GapiComponent::getFile($service, $checkGDriveFolder->folder_id);
            if ($getFolder != null) {
                $gDriveFolder = $checkGDriveFolder->folder_id;
            } else {
                $gDriveFolder = GapiComponent::initSubFolderForCustomerByDate($service, MyHelper::createAlias($customer->full_name) . '-' . $id, date('d-m-Y'), self::FOLDER);
                $checkGDriveFolder->folder_id = $gDriveFolder;
                $checkGDriveFolder->save();
            }
        }

        $model = new FormHinhTknc();
        $model->id = $id;
        $listFile = [];
        $listFileChupHinh = [];

        $checkLocalData = CustomerImages::getListFilesByCustomer($id, Yii::$app->params['chup-hinh-catagory'][self::FOLDER]);
        foreach ($checkLocalData as $tknc) {
            if (file_exists(Url::to('@backend/web') . '/uploads/customer/' . $customer->slug . '-' . $customer->id . '/' . self::FOLDER . '/' . $tknc->image)) {
                $listFile[] = [
                    'type' => 'local',
                    'id' => $tknc->id,
                    'name' => $tknc->image,
                    'webContentLink' => Url::to('@web/uploads') . '/customer/' . $customer->slug . '-' . $customer->id . '/' . self::FOLDER . '/' . $tknc->image,
                    'thumbnailLink' => Url::to('@web/uploads') . '/customer/' . $customer->slug . '-' . $customer->id . '/' . self::FOLDER . '/thumb/' . $tknc->image,
                    'imageType' => $tknc->type
                ];
            }
        }
        if (count($listFile) <= 0) {
            $rowTknc = PhongKhamHinhTknc::find()->where(['customer_id' => $id])->all();
            if ($rowTknc != null) {
                foreach ($rowTknc as $tknc) {
                    $list = GapiComponent::getListFile($service, $tknc->folder_id);
                    if ($list != null && count($list) > 0) {
                        $listFile = array_merge($listFile, $list);
                    }
                }
            }
        }

        $checkLocalDataChupHinh = CustomerImages::getListFilesByCustomer($id, Yii::$app->params['chup-hinh-catagory'][ChupHinhController::FOLDER]);
        foreach ($checkLocalDataChupHinh as $chuphinh) {
            if (file_exists(Url::to('@backend/web') . '/uploads/customer/' . $customer->slug . '-' . $customer->id . '/' . ChupHinhController::FOLDER . '/' . $chuphinh->image)) {
                $listFileChupHinh[] = [
                    'type' => 'local',
                    'id' => $chuphinh->id,
                    'name' => $chuphinh->image,
                    'webContentLink' => Url::to('@web/uploads') . '/customer/' . $customer->slug . '-' . $customer->id . '/' . ChupHinhController::FOLDER . '/' . $chuphinh->image,
                    'thumbnailLink' => Url::to('@web/uploads') . '/customer/' . $customer->slug . '-' . $customer->id . '/' . ChupHinhController::FOLDER . '/thumb/' . $chuphinh->image,
                ];
            }
        }
        if (count($listFileChupHinh) <= 0) {
            $rowChupHinh = PhongKhamChupHinh::find()->where(['customer_id' => $id])->all();
            if ($rowChupHinh != null) {
                foreach ($rowChupHinh as $chupHinh) {
                    $list = GapiComponent::getListFile($service, $chupHinh->folder_id);
                    if ($list != null && count($list) > 0) {
                        $listFileChupHinh = array_merge($listFileChupHinh, $list);
                    }
                }
            }
        }

        return $this->render('upload', [
            'customer' => $customer,
            'model' => $model,
            'listFile' => $listFile,
            'listFileChupHinh' => $listFileChupHinh,
            'gDriveFolder' => $gDriveFolder,
        ]);
    }

    public function actionUploadImage($id)
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        $customer = Clinic::find()->where(['id' => $id])->one();
        if ($customer == null) {
            return [
                'code' => 400,
                'msg' => 'Không tìm thấy khách hàng!'
            ];
        }
        $service = GapiComponent::getService();
        $time = strtotime(date('d-m-Y'));
        /*$checkGDriveFolder = PhongKhamHinhTknc::find()->where(['between', 'created_at', $time, $time + 86399])->andWhere(['customer_id' => $id])->one();
        if ($checkGDriveFolder == null) {
            return [
                'code' => 403,
                'data' => [
                    'msg' => 'Khởi tạo Google Drive thất bại!',
                ]
            ];
        }*/
        $msg = '';
        $dataImage = [];
        if (Yii::$app->request->isAjax) {
            $model = new FormHinhTknc();
            $transaction = Yii::$app->db->beginTransaction(
                Transaction::SERIALIZABLE
            );
            if ($model->load(Yii::$app->request->post())) {
                $file = UploadedFile::getInstances($model, 'fileImage');
                $model->fileImage = $file;
                if ($model->validate()) {
//                    $gDriveFolder = $checkGDriveFolder->folder_id;
                    $data = [];

                    $fileName = $file[0]->baseName . '.' . $file[0]->extension;
                    if ($file[0]->saveAs(Yii::getAlias('@backend/web') . '/uploads/tmp/' . $fileName)) {
                        $msg = 'Upload thành công!';
                        $urlFile = Yii::$app->basePath . '/web/uploads/tmp/' . $fileName;
                        $image = $this->createImage('@backend/web', $urlFile, 220, 220, '/uploads/customer/' . $customer->slug . '-' . $customer->id . '/' . self::FOLDER . '/thumb/');
                        $this->createImage('@backend/web', $urlFile, null, null, '/uploads/customer/' . $customer->slug . '-' . $customer->id . '/' . self::FOLDER . '/', $image);

//                        $idImage = GapiComponent::uploadImageToDrive($service, $fileName, '@backend/web/uploads/tmp', $gDriveFolder);
//                        if ($idImage == null) {
//                            $code = 403;
//                            $msg = "Lưu hình lên drive thất bại!";
//                        } else {
                            $this->deleteImage('@backend/web', '/uploads/tmp/', $fileName);

                            $customerImage = new CustomerImages();
                            $customerImage->customer_id = $customer->id;
                            $customerImage->catagory_id = Yii::$app->params['chup-hinh-catagory'][self::FOLDER];
                            $customerImage->image = $image;
//                            $customerImage->google_id = $idImage;
                            if (!$customerImage->save()) {
                                $code = 400;
                                $msg = "Lưu hình thất bại!";
                                $data = $customerImage->getErrors();
                                $transaction->rollBack();
                            } else {
                                $code = 200;
                                $transaction->commit();
//                                $file = GapiComponent::getFile($service, $idImage);
                                $data = [
                                    'type' => 'local',
                                    'id' => $customerImage->getPrimaryKey(),
                                    'title' => $fileName,
                                    'image' => Yii::getAlias('@web/uploads') . '/customer/' . $customer->slug . '-' . $customer->id . '/' . self::FOLDER . '/' . $image,
                                    'thumb' => Yii::getAlias('@web/uploads') . '/customer/' . $customer->slug . '-' . $customer->id . '/' . self::FOLDER . '/thumb/' . $image,
//                                    'image' => $file['webContentLink'],
//                                    'thumb' => $file['thumbnailLink'],
                                    'type' => 0
                                ];
                            }
//                        }
                    }
                    $dataImage = $data;
                } else {
                    $code = 400;
                    $msg = $model->getErrors('fileImage');
                }
            } else {
                $code = 400;
                $msg = 'Lỗi xử lý dữ liệu!';
            }
        } else {
            $code = 400;
            $msg = 'Yêu cầu không hợp lệ!';
        }
        return [
            'code' => $code,
            'data' => [
                'msg' => $msg,
                'dataImage' => $dataImage,
            ],
        ];
    }

    public function actionReload()
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        $code = 200;
        $msg = '';
        $data = [];
        $id = Yii::$app->request->post('id');
        $service = GapiComponent::getService();
        $file = GapiComponent::getFile($service, $id);
        if ($file == null) {
            $code = 403;
            $msg = "Có lỗi khi làm mới!";
        } else {
            $data = [
                'id' => $file['id'],
                'title' => $file['name'],
                'image' => $file['webContentLink'],
                'thumb' => $file['thumbnailLink'],
            ];
        }
        return [
            'code' => $code,
            'data' => [
                'msg' => $msg,
                'dataImage' => $data
            ]
        ];
    }

    public function actionChooseImage($id = null)
    {
        if (Yii::$app->request->isAjax) {
            Yii::$app->response->format = Response::FORMAT_JSON;
            $type = Yii::$app->request->post('type');
            $act = Yii::$app->request->post('act');
            $image_id = Yii::$app->request->post('image_id');
            if ($id == null || $image_id == null || $type == null || $act == null || !in_array($type, array_keys(CustomerImages::IMAGE_TYPE))) {
                return [
                    'code' => 400,
                    'msg' => 'Lỗi dữ liệu',
                    'data' => [
                        'id' => $id,
                        'image_id' => $image_id,
                        'choose' => $type,
                        'act' => $act,
                        'type' => CustomerImages::IMAGE_TYPE
                    ]
                ];
            }
            $customer = Clinic::find()->where(['id' => $id])->one();
            if ($customer == null) {
                return [
                    'code' => 404,
                    'msg' => 'Không tìm thấy khách hàng'
                ];
            }
            $image = CustomerImages::find()->where(['OR', ['id' => $image_id], ['google_id' => $image_id]])->one();
            if ($image == null) {
                return [
                    'code' => 404,
                    'msg' => 'Không tìm thấy dữ liệu'
                ];
            }
            $transaction = Yii::$app->db->beginTransaction(
                Transaction::SERIALIZABLE
            );
            if ($act == 'add') {
                try {
                    $query = Yii::$app->db->createCommand()->update(CustomerImages::tableName(), [
                        'type' => CustomerImages::IMAGE_NORMAL
                    ], [
                        'customer_id' => $id,
                        'type' => CustomerImages::IMAGE_TYPE[$type]
                    ]);
                    $execute = $query->execute();
                } catch (Exception $ex) {
                    $transaction->rollBack();
                    return [
                        'code' => 400,
                        'msg' => Yii::$app->params['update-danger'],
                    ];
                }
                $image->type = CustomerImages::IMAGE_TYPE[$type];
                if (!$image->save()) {
                    $transaction->rollBack();
                }
            } else {
                $image->type = CustomerImages::IMAGE_NORMAL;
                if (!$image->save()) {
                    $transaction->rollBack();
                    return [
                        'code' => 400,
                        'msg' => Yii::$app->params['update-danger']
                    ];
                }
            }
            $transaction->commit();
            return [
                'code' => 200,
                'msg' => Yii::$app->params['update-success']
            ];
        }
    }
}
